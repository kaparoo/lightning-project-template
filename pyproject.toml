# See the following PEPs for more information
# https://peps.python.org/pep-0517/
# https://peps.python.org/pep-0518/
# https://peps.python.org/pep-0621/

# ========================== #
#        Build System        #
# ========================== #w

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# ========================== #
#      Project Metadata      #
# ========================== #

[project]
name = "YOUR_PROJECT_NAME"  # FIX HERE
dynamic = ["version"]
description = "YOUR_PROJECT_DESCRIPTION"  # FIX HERE
readme = "README.md"
requires-python = "PYTHON_VERSION_SPECIFIER"  # FIX HERE
license = { file = "LICENSE" }
authors = [ 
    { name = "AUTHOR_NAME", email = "AUTHOR@EMAIL" },  # FIX HERE
]
maintainers = [
    { name = "MAINTAINER_NAME", email = "MAINTAINER@EMAIL"},  # FIX HERE
]
keywords = [
    "YOUR",      # FIX HERE
    "PROJECT",   # FIX HERE
    "KEYWORDS",  # FIX HERE
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: GPU",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
    # See https://pypi.org/classifiers/ for more classifiers
]
dependencies = [
    "torch",
    "torchaudio",
    "torchtext",
    "torchvision",
    "torchinfo",
    "tensorboard",
    "python-dotenv",
    "matplotlib",
    "jupyter",
    "soundfile",
    "lightning[pytorch-extra]>=2.0",
]

[project.optional-dependencies]
dev = [
    "hatch",
    "ruff",
    "mypy",
    "pytest",
]
# Reserved for future addition of --only-deps option to `pip install`
# See https://github.com/pypa/pip/issues/11440 for more information

[project.urls]
GitHub = "https://www.github.com/YOUR/REPOSITORY"

# ========================== #
#      [tool.*] Sections     #
# ========================== #

[tool.hatch.build]
only-include = ["project"]  # FIX HERE
# See the following documentation for more information
# https://hatch.pypa.io/latest/build/
# https://hatch.pypa.io/latest/config/build/

[tool.hatch.version]
path = "project/__about__.py"  # FIX HERE
# See the following documentation for more information
# https://hatch.pypa.io/latest/version/

[tool.mypy]
allow_redefinition = true
cache_dir = "./.cache/mypy"
exclude = ["tests/"]
pretty = true
show_error_codes = true
show_column_numbers = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true
# See the following documentation for more information
# https://mypy.readthedocs.io/en/stable/config_file.html
# https://mypy.readthedocs.io/en/stable/config_file.html#example-pyproject-toml

[[tool.mypy.overrides]]
module = [
    "torchvision",
    "torchvision.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
cache_dir = "./.cache/pytest"
testpaths = ["tests/"]
# See the following documentation for more information
# https://docs.pytest.org/en/latest/reference/customize.html#pyproject-toml
# https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref

[tool.ruff]
cache-dir = "./.cache/ruff"
extend-include = ["*.ipynb"]
extend-exclude = [".cache", ".venv*", ".vscode", "tests"]
ignore-init-module-imports = true
# See the following documentation for more information
# https://docs.astral.sh/ruff/configuration/
# https://docs.astral.sh/ruff/settings/
# https://docs.astral.sh/ruff/rules/

[tool.ruff.lint]
extend-select = [
    "I",     # isort
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "ANN",   # flake8-annotations
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "C4",    # flake8-comprehensions
    "PIE",   # flake8-pie
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLOT",  # flake8-slots
    "SIM",   # flake8-simplify
    "TCH",   # flake8-type-checking
    "ARG",   # flake8-unused-arguments
    "PGH",   # pygrep-hooks
    "PL",    # Pylint
    "TRY",   # tryceratops
    "FLY",   # flynt
    "NPY",   # NumPy-specific rules
    "PERF",  # Perflint
    # "FURB",  # refurb (in preview)
    "RUF",   # Ruff-specific rules
]
extend-ignore = [
    "PLR0904",  # too-many-public-methods
    "PLR0911",  # too-many-return-statements
    "PLR0912",  # too-many-branches
    "PLR0913",  # too-many-arguments
    "PLR0915",  # too-many-statements
    "PLR0916",  # too-many-boolean-expressions
    "PLR2004",  # magic-value-comparison
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
ignore-fully-untyped = true
mypy-init-return = true
suppress-dummy-args = true
suppress-none-returning = true

[tool.ruff.lint.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.isort]
known-first-party = ["project"]  # FIX HERE
